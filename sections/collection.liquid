{%- liquid
	assign products_per_page = section.settings.products_per_page
	assign desktop_columns = section.settings.columns_desktop
    assign grid_3_btn_class = ''
    assign grid_4_btn_class = ''
    assign collection_grid_class = ''
	assign banner_class = ''

    if desktop_columns == 3
        assign grid_3_btn_class = 'is-active'
        assign collection_grid_class = 'collection__grid--3'
		assign banner_class = 'collection__banner collection__banner--3'
    endif

    if desktop_columns == 4
        assign grid_4_btn_class = 'is-active'
        assign collection_grid_class = 'collection__grid--4'
		assign banner_class = 'collection__banner collection__banner--4 flexbox__item'
    endif

    if desktop_columns == 5
		assign banner_class = 'collection__banner collection__banner--5 flexbox__item'
    endif

	for block in secton.blocks
		if block.type contains 'banner'
			assign products_per_page = products_per_page | minus: 1
		endif
	endfor
-%}


{{ 'component-product-grid.css' | asset_url |stylesheet_tag }}
{{ 'component-content.css' | asset_url | stylesheet_tag }}
{{ 'section-collection.css'   | asset_url |stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- render 'breadcrumbs' -%}

<div class="collecton js-collection h5">
	<div class="section-{{ section.id }}-padding container">
		<div class="flexbox">
			<div class="flexbox__item flexbox__item--4">
				<h1 class="collection__title h2">{{ collection.title }}</h1>
			</div>
			<div class="collection__controls flexbox__item">
				<div class="collection__header">
                    <div class="collection__controls-grid hidden--mob">
                        <button data-grid="4" class="button button--icon collection__controls-btn {{ grid_4_btn_class }} js-collecton-grid-btn">
                            <svg focusable="false" width="16" height="16" viewBox="0 0 16 16">
                                <use href="#icon-grid-4" />
                            </svg>
                        </button>
                        <button data-grid="3" class="button button--icon collection__controls-btn {{ grid_3_btn_class }} js-collecton-grid-btn">
                            <svg focusable="false" width="16" height="16" viewBox="0 0 16 16">
                                <use href="#icon-grid-3" />
                            </svg>  
                        </button>
                    </div>
                    <div class="collection__filter-sort">
                        {% render 'collection-sortby' %}
                        <span class="collection__filter-count hidden--mob">
                            {{ collection.products_count }}
                            {%- if collection.products_count == 1 -%}
                                product
                            {%- else -%}
                                products                                
                            {%- endif -%}
                        </span>
                    </div>
                </div>
			</div>
		</div>

		<div class="flexbox">
			{%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
				<div class="flexbox__item flexbox__item--4">
					{%- render 'collection-toolbar' -%}
				</div>
			{%- endif -%}
			<div class="collection__grid-wrapper flexbox__item text-center">
              {%- paginate collection.products by products_per_page -%}
                  {%- if collection.products.size == 0 -%}
					<div class="collection collection--empty page-width">
						<div class="title-wrapper center">
							<h2 class="title title--primary"></h2>
						</div>
					</div>
                  {%- else -%}
					<div class="collection__grid {{ collection_grid_class }} js-collection-grid">
						<ul data-id="{{ section.id }}" class="product-grid collection__list">
							{%- for product in collection.products -%}
								{%- assign current_index = forloop.index -%}
								{%- assign last_index = forloop.length -%}

								{%- if paginate.current_page == 1 -%}
									{%- for block in section.blocks -%}
										{%- if block.type contains 'banner' -%}
											{%- liquid
												assign banner_collection = block.settings.collection.handle
												assign banner_order = block.settings.order
												assign banner_bg = block.settings.image
												
												if banner_order >= products_per_page
													assign banner_order = last_index
												endif
											 -%}
											{%- if banner_collection == collection.handle and banner_order == current_index and banner_bg != nil -%}
												<div class="flexbox__item  {{ banner_class }}">
													{% render 'collection-banner', block: block %}
												</div> 
											{%- endif -%}
										{%- endif -%}
									{%- endfor -%}
								{%- endif -%}

								{%- render 'product-item', 
									product: product,
									columns: desktop_columns,
									class: 'collection__product', 
									show_secondary_image: section.settings.show_secondary_image,
								-%}

							{%- endfor -%}
						</ul>
						{%- if paginate.pages > 1 -%}
							{% render 'pagination', paginate: paginate, anchor: '' %}
						{%- endif -%}
					</div>
                  {%- endif -%}
              {%- endpaginate -%}
			</div>
		</div>
	</div>
</div>

{{ 'collections-filter.js' | asset_url | script_tag }}


{% schema %}
{
  "name": "t:sections.collection.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 24,
      "step": 1,
      "default": 16,
      "label": "t:sections.collection.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 3,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.collection.settings.columns_desktop.label"
    },
    {
      "type": "header",
      "content": "t:sections.collection.settings.header__3.content"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.collection.settings.show_secondary_image.label"
    },
    {
      "type": "header",
      "content": "t:sections.collection.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.collection.settings.enable_filtering.label",
      "info": "t:sections.collection.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.collection.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.collection.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.collection.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.collection.settings.filter_type.label",
      "info": "t:sections.collection.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.collection.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
	{
		"type": "header",
		"content": "t:sections.collection.settings.sale_banner.label"
	}
  ],
  "blocks": [
	{
		"type": "banner",
		"name": "t:sections.collection.blocks.sale_banner.name",
		"settings": [
			{   
				"type": "collection",
				"id": "collection",
				"label": "t:sections.collection.blocks.sale_banner.settings.collection"
			},
			{
				"type": "range",
				"id": "order",
				"min": 1,
				"max": 24,
				"step": 1,
				"unit": "p",
				"label": "t:sections.collection.blocks.sale_banner.settings.row_number.label",
				"info": "t:sections.collection.blocks.sale_banner.settings.row_number.info",
				"default": 3
			},
			{
				"type": "header",
				"content": "t:sections.all.block_content.image.header"
			},
			{
				"type": "image_picker",
				"id": "image",
				"label": "t:sections.all.block_content.image.primary"
			},
			{
				"type": "text",
				"id": "cta_text",
				"label": "t:sections.all.block_content.cta.text",
				"default": "Shop Now"
			},
			{
				"type": "select",
				"id": "cta_style",
				"label": "t:sections.all.block_content.cta.style.label",
				"options": [
					{ 
						"value": "", 
						"label": "t:sections.all.block_content.cta.style.options_1" 
					},
					{ 
						"value": "solid-black", 
						"label": "t:sections.all.block_content.cta.style.options_2" 
					},
					{ 
						"value": "purple", 
						"label": "t:sections.all.block_content.cta.style.options_3" 
					},
					{ 
						"value": "solid-purple", 
						"label": "t:sections.all.block_content.cta.style.options_4" 
					},
					{ 
						"value": "blue", 
						"label": "t:sections.all.block_content.cta.style.options_5" 
					},
					{ 
						"value": "solid-blue", 
						"label": "t:sections.all.block_content.cta.style.options_6" 
					},
					{ 
						"value": "red", 
						"label": "t:sections.all.block_content.cta.style.options_7" 
					},
					{ 
						"value": "solid-red", 
						"label": "t:sections.all.block_content.cta.style.options_8" 
					}
				],
				"default": ""
			},
			{
				"type": "url",
				"id": "cta_link",
				"label": "t:sections.all.block_content.cta.link"
			} 
		]
	}
  ]
}
{% endschema %}